-- MySQL Script generated by MySQL Workbench
-- Tue Aug  1 18:38:27 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema tabletennis_competitions
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tabletennis_competitions
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tabletennis_competitions` DEFAULT CHARACTER SET utf8 ;
USE `tabletennis_competitions` ;

-- -----------------------------------------------------
-- Table `tabletennis_competitions`.`competition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`competition` (
  `competition_id` INT(11) NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `phone` VARCHAR(13) NOT NULL,
  `location` VARCHAR(45) NOT NULL,
  `passwd` VARCHAR(45) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`competition_id`),
  UNIQUE INDEX `title` (`title` ASC, `start_date` ASC, `phone` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 44
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tabletennis_competitions`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`event` (
  `event_id` INT(11) NOT NULL AUTO_INCREMENT,
  `competition_id` INT(11) NOT NULL,
  `max_grade` INT(1) NOT NULL,
  `min_grade` INT(1) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `type` SET('M', 'F', 'MM', 'FF', 'MF') NOT NULL COMMENT 'M : 남자단식\nF : 여자단식\nMM : 남자 복식\nFF : 여자복식\nMF : 혼합복',
  `rule_of_league` INT(11) NOT NULL COMMENT '예선전 조편성 방식\n (ex. 3인1조의 경우 rule_of_league = 3, 5인 1조 rule_of_league = 5)',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`event_id`),
  INDEX `competition_id_idx` (`competition_id` ASC),
  CONSTRAINT `competition_id`
    FOREIGN KEY (`competition_id`)
    REFERENCES `tabletennis_competitions`.`competition` (`competition_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 14
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tabletennis_competitions`.`game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`game` (
  `game_id` INT(11) NOT NULL AUTO_INCREMENT,
  `game_order` INT(11) NOT NULL,
  `game_round` INT(11) NOT NULL,
  `parent_a` INT(11) NULL DEFAULT NULL COMMENT 'parent_a\n : game의 이전 game의 id\n  (ex.  game이 16강일 경우, 32강 2개의 game이 parent가 된다.\n    round 2의 game은 round 1의 game 2개를 parent로 가진다.)   ',
  `parent_b` INT(11) NULL DEFAULT NULL COMMENT 'parent_b\n : game의 이전 game의 id\n  (ex.  game이 16강일 경우, 32강 2개의 game이 parent가 된다.\n    round 2의 game은 round 1의 game 2개를 parent로 가진다.)   ',
  `event` INT(11) NOT NULL,
  PRIMARY KEY (`game_id`),
  UNIQUE INDEX `game_order` (`game_order` ASC, `game_round` ASC, `event` ASC),
  INDEX `ev_id_idx` (`event` ASC),
  CONSTRAINT `ev_id`
    FOREIGN KEY (`event`)
    REFERENCES `tabletennis_competitions`.`event` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1709
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tabletennis_competitions`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`group` (
  `group_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(13) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`group_id`),
  UNIQUE INDEX `name` (`name` ASC, `phone` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 15
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tabletennis_competitions`.`player`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`player` (
  `player_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(13) NOT NULL,
  `grade` INT(1) NOT NULL,
  `gender` SET('M', 'F') NOT NULL,
  `passwd` VARCHAR(45) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`player_id`),
  UNIQUE INDEX `name` (`name` ASC, `phone` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 64
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tabletennis_competitions`.`participant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`participant` (
  `participant_id` INT(11) NOT NULL AUTO_INCREMENT,
  `group_id` INT(11) NOT NULL,
  `player_id` INT(11) NOT NULL,
  `event_id` INT(11) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `partner_id` BIGINT(128) NULL DEFAULT '0',
  PRIMARY KEY (`participant_id`),
  UNIQUE INDEX `group_id` (`group_id` ASC, `player_id` ASC, `event_id` ASC),
  INDEX `event_id_idx` (`event_id` ASC),
  INDEX `player_id_idx` (`player_id` ASC),
  INDEX `group_id_idx` (`group_id` ASC),
  CONSTRAINT `event_id`
    FOREIGN KEY (`event_id`)
    REFERENCES `tabletennis_competitions`.`event` (`event_id`),
  CONSTRAINT `group_id`
    FOREIGN KEY (`group_id`)
    REFERENCES `tabletennis_competitions`.`group` (`group_id`),
  CONSTRAINT `player_id`
    FOREIGN KEY (`player_id`)
    REFERENCES `tabletennis_competitions`.`player` (`player_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 213
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tabletennis_competitions`.`match`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`match` (
  `match_id` INT(11) NOT NULL AUTO_INCREMENT,
  `match_order` INT(11) NOT NULL,
  `game_id` INT(11) NOT NULL,
  `parti_id` INT(11) NOT NULL,
  PRIMARY KEY (`match_id`),
  UNIQUE INDEX `match_order` (`match_order` ASC, `game_id` ASC, `parti_id` ASC),
  INDEX `game_id_idx` (`game_id` ASC),
  INDEX `parti_id_idx` (`parti_id` ASC),
  CONSTRAINT `game_id`
    FOREIGN KEY (`game_id`)
    REFERENCES `tabletennis_competitions`.`game` (`game_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `parti_id`
    FOREIGN KEY (`parti_id`)
    REFERENCES `tabletennis_competitions`.`participant` (`participant_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 6846
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tabletennis_competitions`.`score_card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`score_card` (
  `set` INT(1) NOT NULL,
  `point` INT(2) NOT NULL,
  `score_card_id` INT(11) NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`score_card_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tabletennis_competitions`.`score_record`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`score_record` (
  `score_card_id` INT(11) NOT NULL,
  `match_id` INT(11) NOT NULL,
  INDEX `score_card_id_idx` (`score_card_id` ASC),
  INDEX `match_id_idx` (`match_id` ASC),
  CONSTRAINT `match_id`
    FOREIGN KEY (`match_id`)
    REFERENCES `tabletennis_competitions`.`match` (`match_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `score_card_id`
    FOREIGN KEY (`score_card_id`)
    REFERENCES `tabletennis_competitions`.`score_card` (`score_card_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

USE `tabletennis_competitions` ;

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_competition_event_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_competition_event_list` (`competition_id` INT, `title` INT, `start_date` INT, `end_date` INT, `phone` INT, `location` INT, `passwd` INT, `event_id` INT, `max_grade` INT, `min_grade` INT, `event_title` INT, `type` INT, `rule_of_league` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_competition_event_participant_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_competition_event_participant_list` (`competition_id` INT, `title` INT, `start_date` INT, `end_date` INT, `phone` INT, `location` INT, `passwd` INT, `event_id` INT, `max_grade` INT, `min_grade` INT, `event_title` INT, `type` INT, `rule_of_league` INT, `participant_id` INT, `group_id` INT, `player_id` INT, `partner_id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_double_match_participant_ids`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_double_match_participant_ids` (`competition_id` INT, `event_id` INT, `game_id` INT, `game_order` INT, `match_order` INT, `player1` INT, `player2` INT, `player3` INT, `player4` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_double_match_participant_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_double_match_participant_list` (`competition_id` INT, `event_id` INT, `game_id` INT, `game_order` INT, `game_round` INT, `parent_a` INT, `parent_b` INT, `match_order` INT, `p1_participant` INT, `p1_group_id` INT, `p1_player_id` INT, `p1_partner_id` INT, `p1_name` INT, `p1_phone` INT, `p1_grade` INT, `p1_gender` INT, `p2_participant` INT, `p2_group_id` INT, `p2_player_id` INT, `p2_partner_id` INT, `p2_name` INT, `p2_phone` INT, `p2_grade` INT, `p2_gender` INT, `p3_participant` INT, `p3_group_id` INT, `p3_player_id` INT, `p3_partner_id` INT, `p3_name` INT, `p3_phone` INT, `p3_grade` INT, `p3_gender` INT, `p4_participant` INT, `p4_group_id` INT, `p4_player_id` INT, `p4_partner_id` INT, `p4_name` INT, `p4_phone` INT, `p4_grade` INT, `p4_gender` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_double_match_players_name`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_double_match_players_name` (`competition_name` INT, `competition_id` INT, `event_name` INT, `event_id` INT, `game_id` INT, `game_order` INT, `match_order` INT, `player1` INT, `player2` INT, `player3` INT, `player4` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_participant_info_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_participant_info_list` (`created` INT, `participant_id` INT, `event_id` INT, `player_id` INT, `player_name` INT, `player_phone` INT, `gender` INT, `grade` INT, `passwd` INT, `group_id` INT, `group_name` INT, `group_phone` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_score_cards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_score_cards` (`competition_title` INT, `event_title` INT, `event_id` INT, `game_round` INT, `game_order` INT, `match_order` INT, `name` INT, `player_id` INT, `set` INT, `point` INT, `match_id` INT, `created` INT, `phone` INT, `grade` INT, `gender` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_single_match_participant_ids`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_single_match_participant_ids` (`competition_id` INT, `event_id` INT, `game_id` INT, `game_order` INT, `match_order` INT, `player1` INT, `player2` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_single_match_participant_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_single_match_participant_list` (`competition_id` INT, `event_id` INT, `game_id` INT, `game_order` INT, `game_round` INT, `parent_a` INT, `parent_b` INT, `match_order` INT, `p1_participant` INT, `p1_group_id` INT, `p1_player_id` INT, `p1_partner_id` INT, `p1_name` INT, `p1_phone` INT, `p1_grade` INT, `p1_gender` INT, `p2_participant` INT, `p2_group_id` INT, `p2_player_id` INT, `p2_partner_id` INT, `p2_name` INT, `p2_phone` INT, `p2_grade` INT, `p2_gender` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tabletennis_competitions`.`view_single_match_players_name`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tabletennis_competitions`.`view_single_match_players_name` (`competition_title` INT, `event_title` INT, `game_id` INT, `game_order` INT, `match_order` INT, `p1_name` INT, `p2_name` INT);

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_competition_event_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_competition_event_list`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_competition_event_list` AS select `c`.`competition_id` AS `competition_id`,`c`.`title` AS `title`,`c`.`start_date` AS `start_date`,`c`.`end_date` AS `end_date`,`c`.`phone` AS `phone`,`c`.`location` AS `location`,`c`.`passwd` AS `passwd`,`e`.`event_id` AS `event_id`,`e`.`max_grade` AS `max_grade`,`e`.`min_grade` AS `min_grade`,`e`.`title` AS `event_title`,`e`.`type` AS `type`,`e`.`rule_of_league` AS `rule_of_league` from (`tabletennis_competitions`.`competition` `c` join `tabletennis_competitions`.`event` `e`) where (`c`.`competition_id` = `e`.`competition_id`) order by `c`.`competition_id`,`e`.`event_id`;

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_competition_event_participant_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_competition_event_participant_list`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_competition_event_participant_list` AS select `v`.`competition_id` AS `competition_id`,`v`.`title` AS `title`,`v`.`start_date` AS `start_date`,`v`.`end_date` AS `end_date`,`v`.`phone` AS `phone`,`v`.`location` AS `location`,`v`.`passwd` AS `passwd`,`v`.`event_id` AS `event_id`,`v`.`max_grade` AS `max_grade`,`v`.`min_grade` AS `min_grade`,`v`.`event_title` AS `event_title`,`v`.`type` AS `type`,`v`.`rule_of_league` AS `rule_of_league`,`p`.`participant_id` AS `participant_id`,`p`.`group_id` AS `group_id`,`p`.`player_id` AS `player_id`,`p`.`partner_id` AS `partner_id` from (`tabletennis_competitions`.`view_competition_event_list` `v` join `tabletennis_competitions`.`participant` `p`) where (`v`.`event_id` = `p`.`event_id`);

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_double_match_participant_ids`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_double_match_participant_ids`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_double_match_participant_ids` AS select `e`.`competition_id` AS `competition_id`,`p1`.`event_id` AS `event_id`,`m1`.`game_id` AS `game_id`,`g`.`game_order` AS `game_order`,`m1`.`match_order` AS `match_order`,`p1`.`participant_id` AS `player1`,`p2`.`participant_id` AS `player2`,`p3`.`participant_id` AS `player3`,`p4`.`participant_id` AS `player4` from (((((((((`tabletennis_competitions`.`event` `e` join `tabletennis_competitions`.`game` `g`) join `tabletennis_competitions`.`participant` `p1`) join `tabletennis_competitions`.`participant` `p2`) join `tabletennis_competitions`.`participant` `p3`) join `tabletennis_competitions`.`participant` `p4`) join `tabletennis_competitions`.`match` `m1`) join `tabletennis_competitions`.`match` `m2`) join `tabletennis_competitions`.`match` `m3`) join `tabletennis_competitions`.`match` `m4`) where ((1 = 1) and (`e`.`type` in ('MM','MF','FF')) and (`p1`.`event_id` = `e`.`event_id`) and (`m1`.`game_id` = `g`.`game_id`) and (`p1`.`participant_id` = `m1`.`parti_id`) and (`p2`.`participant_id` = `m2`.`parti_id`) and (`p3`.`participant_id` = `m3`.`parti_id`) and (`p4`.`participant_id` = `m4`.`parti_id`) and (`m1`.`game_id` = `m2`.`game_id`) and (`m2`.`game_id` = `m3`.`game_id`) and (`m3`.`game_id` = `m4`.`game_id`) and (`m1`.`match_order` = `m2`.`match_order`) and (`m2`.`match_order` = `m3`.`match_order`) and (`m3`.`match_order` = `m4`.`match_order`) and (`p1`.`participant_id` <> `p2`.`participant_id`) and (`p1`.`participant_id` < `p2`.`participant_id`) and (`p2`.`participant_id` <> `p3`.`participant_id`) and (`p2`.`participant_id` < `p3`.`participant_id`) and (`p3`.`participant_id` <> `p4`.`participant_id`) and (`p3`.`participant_id` < `p4`.`participant_id`) and (`p1`.`partner_id` = `p2`.`partner_id`) and (`p3`.`partner_id` = `p4`.`partner_id`)) order by `p1`.`event_id`,`m1`.`game_id`,`g`.`game_order`,`m1`.`match_order`;

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_double_match_participant_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_double_match_participant_list`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_double_match_participant_list` AS select `e`.`competition_id` AS `competition_id`,`p1`.`event_id` AS `event_id`,`m1`.`game_id` AS `game_id`,`g`.`game_order` AS `game_order`,`g`.`game_round` AS `game_round`,`g`.`parent_a` AS `parent_a`,`g`.`parent_b` AS `parent_b`,`m1`.`match_order` AS `match_order`,`p1`.`participant_id` AS `p1_participant`,`p1`.`group_id` AS `p1_group_id`,`p1`.`player_id` AS `p1_player_id`,`p1`.`partner_id` AS `p1_partner_id`,`player1`.`name` AS `p1_name`,`player1`.`phone` AS `p1_phone`,`player1`.`grade` AS `p1_grade`,`player1`.`gender` AS `p1_gender`,`p2`.`participant_id` AS `p2_participant`,`p2`.`group_id` AS `p2_group_id`,`p2`.`player_id` AS `p2_player_id`,`p2`.`partner_id` AS `p2_partner_id`,`player2`.`name` AS `p2_name`,`player2`.`phone` AS `p2_phone`,`player2`.`grade` AS `p2_grade`,`player2`.`gender` AS `p2_gender`,`p3`.`participant_id` AS `p3_participant`,`p3`.`group_id` AS `p3_group_id`,`p3`.`player_id` AS `p3_player_id`,`p3`.`partner_id` AS `p3_partner_id`,`player3`.`name` AS `p3_name`,`player3`.`phone` AS `p3_phone`,`player3`.`grade` AS `p3_grade`,`player3`.`gender` AS `p3_gender`,`p4`.`participant_id` AS `p4_participant`,`p4`.`group_id` AS `p4_group_id`,`p4`.`player_id` AS `p4_player_id`,`p4`.`partner_id` AS `p4_partner_id`,`player4`.`name` AS `p4_name`,`player4`.`phone` AS `p4_phone`,`player4`.`grade` AS `p4_grade`,`player4`.`gender` AS `p4_gender` from (((((((((((((`tabletennis_competitions`.`event` `e` join `tabletennis_competitions`.`game` `g`) join `tabletennis_competitions`.`participant` `p1`) join `tabletennis_competitions`.`participant` `p2`) join `tabletennis_competitions`.`participant` `p3`) join `tabletennis_competitions`.`participant` `p4`) join `tabletennis_competitions`.`match` `m1`) join `tabletennis_competitions`.`match` `m2`) join `tabletennis_competitions`.`match` `m3`) join `tabletennis_competitions`.`match` `m4`) join `tabletennis_competitions`.`player` `player1`) join `tabletennis_competitions`.`player` `player2`) join `tabletennis_competitions`.`player` `player3`) join `tabletennis_competitions`.`player` `player4`) where ((1 = 1) and (`e`.`type` in ('MM','MF','FF')) and (`p1`.`event_id` = `e`.`event_id`) and (`g`.`game_id` = `m1`.`game_id`) and (`p1`.`participant_id` = `m1`.`parti_id`) and (`p2`.`participant_id` = `m2`.`parti_id`) and (`p3`.`participant_id` = `m3`.`parti_id`) and (`p4`.`participant_id` = `m4`.`parti_id`) and (`m1`.`game_id` = `m2`.`game_id`) and (`m2`.`game_id` = `m3`.`game_id`) and (`m3`.`game_id` = `m4`.`game_id`) and (`m1`.`match_order` = `m2`.`match_order`) and (`m2`.`match_order` = `m3`.`match_order`) and (`m3`.`match_order` = `m4`.`match_order`) and (`p1`.`participant_id` <> `p2`.`participant_id`) and (`p1`.`participant_id` < `p2`.`participant_id`) and (`p2`.`participant_id` <> `p3`.`participant_id`) and (`p2`.`participant_id` < `p3`.`participant_id`) and (`p3`.`participant_id` <> `p4`.`participant_id`) and (`p3`.`participant_id` < `p4`.`participant_id`) and (`p1`.`partner_id` = `p2`.`partner_id`) and (`p3`.`partner_id` = `p4`.`partner_id`) and (`p1`.`player_id` = `player1`.`player_id`) and (`p2`.`player_id` = `player2`.`player_id`) and (`p3`.`player_id` = `player3`.`player_id`) and (`p4`.`player_id` = `player4`.`player_id`)) order by `p1`.`event_id`,`m1`.`game_id`,`m1`.`match_order`;

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_double_match_players_name`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_double_match_players_name`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_double_match_players_name` AS select `c`.`title` AS `competition_name`,`c`.`competition_id` AS `competition_id`,`e`.`title` AS `event_name`,`e`.`event_id` AS `event_id`,`g`.`game_id` AS `game_id`,`g`.`game_order` AS `game_order`,`m1`.`match_order` AS `match_order`,`player1`.`name` AS `player1`,`player2`.`name` AS `player2`,`player3`.`name` AS `player3`,`player4`.`name` AS `player4` from ((((((((((((((`tabletennis_competitions`.`competition` `c` join `tabletennis_competitions`.`event` `e`) join `tabletennis_competitions`.`game` `g`) join `tabletennis_competitions`.`participant` `p1`) join `tabletennis_competitions`.`participant` `p2`) join `tabletennis_competitions`.`participant` `p3`) join `tabletennis_competitions`.`participant` `p4`) join `tabletennis_competitions`.`match` `m1`) join `tabletennis_competitions`.`match` `m2`) join `tabletennis_competitions`.`match` `m3`) join `tabletennis_competitions`.`match` `m4`) join `tabletennis_competitions`.`player` `player1`) join `tabletennis_competitions`.`player` `player2`) join `tabletennis_competitions`.`player` `player3`) join `tabletennis_competitions`.`player` `player4`) where ((1 = 1) and (`e`.`type` in ('MM','MF','FF')) and (`e`.`competition_id` = `c`.`competition_id`) and (`e`.`event_id` = `p1`.`event_id`) and (`m1`.`game_id` = `g`.`game_id`) and (`p1`.`participant_id` = `m1`.`parti_id`) and (`p2`.`participant_id` = `m2`.`parti_id`) and (`p3`.`participant_id` = `m3`.`parti_id`) and (`p4`.`participant_id` = `m4`.`parti_id`) and (`m1`.`game_id` = `m2`.`game_id`) and (`m2`.`game_id` = `m3`.`game_id`) and (`m3`.`game_id` = `m4`.`game_id`) and (`m1`.`match_order` = `m2`.`match_order`) and (`m2`.`match_order` = `m3`.`match_order`) and (`m3`.`match_order` = `m4`.`match_order`) and (`p1`.`participant_id` <> `p2`.`participant_id`) and (`p1`.`participant_id` < `p2`.`participant_id`) and (`p2`.`participant_id` <> `p3`.`participant_id`) and (`p2`.`participant_id` < `p3`.`participant_id`) and (`p3`.`participant_id` <> `p4`.`participant_id`) and (`p3`.`participant_id` < `p4`.`participant_id`) and (`p1`.`partner_id` = `p2`.`partner_id`) and (`p3`.`partner_id` = `p4`.`partner_id`) and (`p1`.`player_id` = `player1`.`player_id`) and (`p2`.`player_id` = `player2`.`player_id`) and (`p3`.`player_id` = `player3`.`player_id`) and (`p4`.`player_id` = `player4`.`player_id`)) order by `e`.`event_id`,`g`.`game_id`,`g`.`game_order`,`m1`.`match_order`;

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_participant_info_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_participant_info_list`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_participant_info_list` AS select `tabletennis_competitions`.`participant`.`created` AS `created`,`tabletennis_competitions`.`participant`.`participant_id` AS `participant_id`,`tabletennis_competitions`.`participant`.`event_id` AS `event_id`,`p`.`player_id` AS `player_id`,`p`.`name` AS `player_name`,`p`.`phone` AS `player_phone`,`p`.`gender` AS `gender`,`p`.`grade` AS `grade`,`p`.`passwd` AS `passwd`,`g`.`group_id` AS `group_id`,`g`.`name` AS `group_name`,`g`.`phone` AS `group_phone` from ((`tabletennis_competitions`.`player` `p` join `tabletennis_competitions`.`participant`) join `tabletennis_competitions`.`group` `g`) where ((`tabletennis_competitions`.`participant`.`player_id` = `p`.`player_id`) and (`tabletennis_competitions`.`participant`.`group_id` = `g`.`group_id`)) order by `tabletennis_competitions`.`participant`.`event_id`,`tabletennis_competitions`.`participant`.`participant_id`;

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_score_cards`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_score_cards`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_score_cards` AS select distinct `comp`.`title` AS `competition_title`,`e`.`title` AS `event_title`,`e`.`event_id` AS `event_id`,`g`.`game_round` AS `game_round`,`g`.`game_order` AS `game_order`,`m`.`match_order` AS `match_order`,`p`.`name` AS `name`,`p`.`player_id` AS `player_id`,`sc`.`set` AS `set`,`sc`.`point` AS `point`,`sr`.`match_id` AS `match_id`,`sc`.`created` AS `created`,`p`.`phone` AS `phone`,`p`.`grade` AS `grade`,`p`.`gender` AS `gender` from (((((((`tabletennis_competitions`.`score_card` `sc` join `tabletennis_competitions`.`score_record` `sr`) join `tabletennis_competitions`.`match` `m`) join `tabletennis_competitions`.`participant` `parti`) join `tabletennis_competitions`.`player` `p`) join `tabletennis_competitions`.`event` `e`) join `tabletennis_competitions`.`competition` `comp`) join `tabletennis_competitions`.`game` `g`) where ((`sr`.`score_card_id` = `sc`.`score_card_id`) and (`m`.`match_id` = `sr`.`match_id`) and (`m`.`parti_id` = `parti`.`participant_id`) and (`m`.`game_id` = `g`.`game_id`) and (`g`.`event` = `e`.`event_id`) and (`comp`.`competition_id` = `e`.`competition_id`) and (`p`.`player_id` = `parti`.`player_id`));

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_single_match_participant_ids`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_single_match_participant_ids`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_single_match_participant_ids` AS select `e`.`competition_id` AS `competition_id`,`p1`.`event_id` AS `event_id`,`m1`.`game_id` AS `game_id`,`g`.`game_order` AS `game_order`,`m1`.`match_order` AS `match_order`,`p1`.`participant_id` AS `player1`,`p2`.`participant_id` AS `player2` from (((((`tabletennis_competitions`.`event` `e` join `tabletennis_competitions`.`game` `g`) join `tabletennis_competitions`.`participant` `p1`) join `tabletennis_competitions`.`participant` `p2`) join `tabletennis_competitions`.`match` `m1`) join `tabletennis_competitions`.`match` `m2`) where ((1 = 1) and (`e`.`type` in ('M','F')) and (`p1`.`event_id` = `e`.`event_id`) and (`m1`.`game_id` = `g`.`game_id`) and (`p1`.`participant_id` = `m1`.`parti_id`) and (`p2`.`participant_id` = `m2`.`parti_id`) and (`m1`.`game_id` = `m2`.`game_id`) and (`m1`.`match_order` = `m2`.`match_order`) and (`p1`.`participant_id` <> `p2`.`participant_id`) and (`p1`.`participant_id` < `p2`.`participant_id`)) order by `p1`.`event_id`,`m1`.`game_id`,`g`.`game_order`,`m1`.`match_order`;

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_single_match_participant_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_single_match_participant_list`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_single_match_participant_list` AS select `e`.`competition_id` AS `competition_id`,`p1`.`event_id` AS `event_id`,`m1`.`game_id` AS `game_id`,`g`.`game_order` AS `game_order`,`g`.`game_round` AS `game_round`,`g`.`parent_a` AS `parent_a`,`g`.`parent_b` AS `parent_b`,`m1`.`match_order` AS `match_order`,`p1`.`participant_id` AS `p1_participant`,`p1`.`group_id` AS `p1_group_id`,`p1`.`player_id` AS `p1_player_id`,`p1`.`partner_id` AS `p1_partner_id`,`player1`.`name` AS `p1_name`,`player1`.`phone` AS `p1_phone`,`player1`.`grade` AS `p1_grade`,`player1`.`gender` AS `p1_gender`,`p2`.`participant_id` AS `p2_participant`,`p2`.`group_id` AS `p2_group_id`,`p2`.`player_id` AS `p2_player_id`,`p2`.`partner_id` AS `p2_partner_id`,`player2`.`name` AS `p2_name`,`player2`.`phone` AS `p2_phone`,`player2`.`grade` AS `p2_grade`,`player2`.`gender` AS `p2_gender` from (((((((`tabletennis_competitions`.`event` `e` join `tabletennis_competitions`.`game` `g`) join `tabletennis_competitions`.`participant` `p1`) join `tabletennis_competitions`.`participant` `p2`) join `tabletennis_competitions`.`match` `m1`) join `tabletennis_competitions`.`match` `m2`) join `tabletennis_competitions`.`player` `player1`) join `tabletennis_competitions`.`player` `player2`) where ((1 = 1) and (`e`.`type` in ('M','F')) and (`p1`.`event_id` = `e`.`event_id`) and (`g`.`game_id` = `m1`.`game_id`) and (`p1`.`participant_id` = `m1`.`parti_id`) and (`p2`.`participant_id` = `m2`.`parti_id`) and (`m1`.`game_id` = `m2`.`game_id`) and (`m1`.`match_order` = `m2`.`match_order`) and (`p1`.`participant_id` <> `p2`.`participant_id`) and (`p1`.`participant_id` < `p2`.`participant_id`) and (`p1`.`partner_id` = `p2`.`partner_id`) and (`p1`.`player_id` = `player1`.`player_id`) and (`p2`.`player_id` = `player2`.`player_id`)) order by `p1`.`event_id`,`m1`.`game_id`,`m1`.`match_order`;

-- -----------------------------------------------------
-- View `tabletennis_competitions`.`view_single_match_players_name`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tabletennis_competitions`.`view_single_match_players_name`;
USE `tabletennis_competitions`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `tabletennis_competitions`.`view_single_match_players_name` AS select `c`.`title` AS `competition_title`,`e`.`title` AS `event_title`,`m1`.`game_id` AS `game_id`,`g`.`game_order` AS `game_order`,`m1`.`match_order` AS `match_order`,`player1`.`name` AS `p1_name`,`player2`.`name` AS `p2_name` from ((((((((`tabletennis_competitions`.`competition` `c` join `tabletennis_competitions`.`event` `e`) join `tabletennis_competitions`.`game` `g`) join `tabletennis_competitions`.`participant` `p1`) join `tabletennis_competitions`.`participant` `p2`) join `tabletennis_competitions`.`match` `m1`) join `tabletennis_competitions`.`match` `m2`) join `tabletennis_competitions`.`player` `player1`) join `tabletennis_competitions`.`player` `player2`) where ((1 = 1) and (`c`.`competition_id` = `e`.`competition_id`) and (`e`.`type` in ('M','F')) and (`p1`.`event_id` = `e`.`event_id`) and (`g`.`game_id` = `m1`.`game_id`) and (`p1`.`participant_id` = `m1`.`parti_id`) and (`p2`.`participant_id` = `m2`.`parti_id`) and (`m1`.`game_id` = `m2`.`game_id`) and (`m1`.`match_order` = `m2`.`match_order`) and (`p1`.`participant_id` <> `p2`.`participant_id`) and (`p1`.`participant_id` < `p2`.`participant_id`) and (`p1`.`partner_id` = `p2`.`partner_id`) and (`p1`.`player_id` = `player1`.`player_id`) and (`p2`.`player_id` = `player2`.`player_id`)) order by `e`.`event_id`,`m1`.`game_id`,`m1`.`match_order`;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
